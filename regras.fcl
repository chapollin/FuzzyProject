FUNCTION_BLOCK teste

VAR_INPUT
    Velocidade : REAL;
    Distancia : REAL;
END_VAR

VAR_OUTPUT
    frenagem : REAL;
END_VAR

FUZZIFY Velocidade
    TERM devagar := (0, 1) (30, 0) ; 
    TERM mediana := (20, 0) (30,1) (60,1) (70,0);
    TERM rapido := (60, 0) (70, 1) (150, 1);
END_FUZZIFY

FUZZIFY Distancia
	TERM muito_perto := (0,1) (20,0);
    TERM perto := (2, 1) (20, 1) (60, 0) (130, 0);
	TERM longe := (60 ,0) (100, 1) (180, 1) (360, 0);
	TERM muito_longe := (250,0) (350,1) (500,1);
END_FUZZIFY

DEFUZZIFY frenagem
	TERM muito_fraca := (0,1) (10,1) (20, 0);
    TERM fraca := (10, 0) (20,1) (50, 0);
    TERM forte := (40,0) (60, 1) (80,0);
    TERM muito_forte := (70,0) (90,1) (100,1);
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COA;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF  Distancia is muito_perto and Velocidade IS rapido
                THEN frenagem IS muito_forte;

	RULE 2 : IF  Distancia is perto and Velocidade IS mediana
                THEN frenagem IS forte;
				
	RULE 3 : IF  Distancia is perto and Velocidade IS devagar
                THEN frenagem IS fraca;
				
	RULE 4 : IF  Distancia is longe and Velocidade IS rapido
                THEN frenagem IS forte;
				
	RULE 5 : IF  Distancia is longe and Velocidade IS mediana
                THEN frenagem IS fraca;
				
	RULE 6 : IF  Distancia is muito_longe and Velocidade IS devagar
                THEN frenagem IS muito_fraca;
				

 
END_RULEBLOCK

END_FUNCTION_BLOCK
